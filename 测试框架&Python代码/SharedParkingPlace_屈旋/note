一、测试报告层
1·Report 测试报告：
            report.py【报告demo】:


二、测试用例层

1·Module 测试用例执行 测试用例的管理 类似unittese的Test_Case：
            ddt_woniu_login.py【wn登录用例执行】:
            ddt_ui_start.py【图形界面的用例执行】:
            ddt_ui_startup.py【图形界面的用例加载】:
            execute_customer.py【执行会员管理动作】:
            execute_login.py【执行登录动作】:

2·Test 测试用例 Test前缀，只调用动作实现：
            test_customer.py【会员管理用例的动作】:
            test_login【登录用例的动作】:
            test_interface_sell.py【销售出库的接口测试】:
            test_report.py【测试报告：往数据库写入信息，读取数据库信息写进html模板】:
            test_sales_ddt_smoking.py【关键字执行 销售管理 的冒烟测试】:
            test_store.py【库存查询执行的动作 和 断言】:

三、业务逻辑层
1·Tool公共动作类、工具：
            template.html【测试报告模板.html】:
            file_util.py【各类工具、文件的操作】: gui和api使用同一数方法            gui_util.py【图形界面操作】:
            image_identification.py【图像识别】:
            PIL_image.py【PIL图像处理库】:
            gui_util.py【】:

            APi：
            api_util.py【接口测试工具】:

2·Action 具体的业务执行 do前缀：
            do_sales.py【销售管理的执行动作】:
            do_store.py 【库存查询执行动作】:
            do_MainPage.py【wn一级界面动作】:
            do_login.py【登录的动作】:
            do_customer.py【会员管理的动作】:
            do_customer_demo.py【demo】:

             do_api_sales.py【销售管理模块接口执行动作】:

3·Image图像存储：

4·Logs日志：

四、数据访问层：持久层
1Test_data 存放测试数据：
            Test_report.py【替换 测试报告模板 内容】: write_report_db 执行写入数据库   generate_html_report 查询数据库写入替换报告
            report_db.sql【蜗牛报告数据库表设计】:
            base.ini【数据库连接ini配置信息】:
            demo.yaml【demo】:
            inspector.ini【元素选择】:
            test.into【demo】:
            test_into.ini【demo】:
            ws_case_ui.xlsx【wnUI测试用例数据】: gui和api使用同一数据格式
            ws_case_api.xlsx【wnAPI测试用例数据】:

Kw_driver 关键字驱动：
            ddt_start.py【执行关键字驱动】:
            ddt_collection.py【关键字动作】:
        kw_script关键字脚本动作 编写:
                    add_customer_script【会员故那里关键字驱动脚本】:
                    login_script【登录关键字驱动脚本】:
                    sales_ddt【蜗牛销售出库关键字驱动的编写】:
                    intepret【与方法对应的关键字解释】:


Config 配置文件（数据地址）：
            ddt_script.conf【关键字驱动脚本地址】:
